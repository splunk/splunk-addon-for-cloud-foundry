[CF - Cell Capacity - Remaining Disk]
display.page.search.mode = fast
request.ui_dispatch_view = search
search = `cf_index` sourcetype=cf:valuemetric name=CapacityRemainingDisk \
       | eval valueGB=round(case(unit=="MiB", value/1024, unit=="KiB", value/(1024*1024), unit=="GiB", value),2) \
       | timechart min(valueGB) by job_instance

[CF - Cell Capacity - Remaining Memory]
display.page.search.mode = fast
request.ui_dispatch_view = search
search = `cf_index` sourcetype=cf:valuemetric name=CapacityRemainingMemory \
       | eval valueGB=round(case(unit=="MiB", value/1024, unit=="KiB", value/(1024*1024), unit=="GiB", value),2) \
       | timechart min(valueGB) by job_instance

[CF - Cell Capacity - Total Remaining Disk]
display.page.search.mode = fast
request.ui_dispatch_view = search
search = `cf_index` sourcetype=cf:valuemetric name=CapacityRemainingDisk \
       | eval valueGB=round(case(unit=="MiB", value/1024, unit=="KiB", value/(1024*1024), unit=="GiB", value),2) \
       | timechart span=5s avg(valueGB) as valueGB by job_instance \
       | filldown \
       | untable _time job_instance valueGB \
       | timechart span=5s sum(valueGB)

[CF - Cell Capacity - Total Remaining Memory]
display.page.search.mode = fast
request.ui_dispatch_view = search
search = `cf_index` sourcetype=cf:valuemetric name=CapacityRemainingMemory \
       | eval valueGB=round(case(unit=="MiB", value/1024, unit=="KiB", value/(1024*1024), unit=="GiB", value),2) \
       | timechart span=5s avg(valueGB) as valueGB by job_instance \
       | filldown \
       | untable _time job_instance valueGB \
       | timechart span=5s sum(valueGB)

[CF - Cell Disk Health]
search = `cf_index` sourcetype=cf:valuemetric name=CapacityRemainingDisk \
        | eval valueGB=round(case(unit=="MiB", value/1024, unit=="KiB", value/(1024*1024), unit=="GiB", value),2) \
        | stats min(valueGB) as disk by job_instance

[CF - Cell Memory Health]
search = `cf_index` sourcetype=cf:valuemetric name=CapacityRemainingMemory \
        | eval valueGB=round(case(unit=="MiB", value/1024, unit=="KiB", value/(1024*1024), unit=="GiB", value),2) \
        | stats min(valueGB) as mem by job_instance
